import ast, operator, math
import sys
from fractions import Fraction

class ExprVisitor(ast.NodeVisitor):
    binOps = {
        ast.Add: operator.add,
        ast.Sub: operator.sub,
        ast.Mult: operator.mul,
        ast.Div: operator.truediv,
        ast.Mod: operator.mod,
        ast.Pow: operator.pow,
        ast.BinOp: ast.BinOp,
    }

    unOps = {
        ast.USub: operator.neg,
        ast.UAdd: operator.pos,
        ast.UnaryOp: ast.UnaryOp,
    }

    ops = tuple(binOps) + tuple(unOps)

    def float_to_factorial(self, num):
        if isinstance(num, float) and num % 1 > 0:
            units, frac = str(num).split('.')
            return Fraction(int(units + frac), 10 ** len(frac))
        elif isinstance(num, float):
            units, frac = str(num).split('.')
            return Fraction(int(units), 1)
        return Fraction(num)

    def checkmath(self, x, *args):
        if x not in [x for x in dir(math) if not "__" in x]:
            raise SyntaxError(f"Unknown func {x}()")
        fun = getattr(math, x)
        return fun(*args)

    def generic_visit(self, node):
        for child in ast.iter_child_nodes(node):
            if isinstance(child, list):
                for item in child:
                    if isinstance(item, ast.AST):
                        return self.visit(item)
            elif isinstance(child, ast.AST):
                return self.visit(child)

    def visit_Num(self, node):
        return self.float_to_factorial(node.value)

    def visit_BinOp(self, node):

        if isinstance(node.left, self.ops):
            left = self.visit(node.left)
        else:
            left = self.float_to_factorial(node.left.value)

        if isinstance(node.right, self.ops):
            right = self.visit(node.right)
        else:
            right = self.float_to_factorial(node.right.value)

        res = self.binOps[type(node.op)](left, right)
        return res

    def visit_UnaryOp(self, node):
        operand = node.operand.value
        return self.unOps[type(node.op)](operand)


def exact_eval(expr):
    tree = ast.parse(expr)
    # print(ast.dump(node))
    res = ExprVisitor().visit(tree)
    print(res)
    return res


if __name__ == "__main__":
    # assert exact_eval("2 * 7 + 3 / 5") == Fraction("73/5")
    # assert exact_eval("-2 * (7 + 3) / 5") == Fraction("-4")
    # assert exact_eval("(11/345 + (5.56+32.30)/2.) / 7")  == Fraction("18691/6900")
    # assert exact_eval
    #     == Fraction("-6427912589766769427391123659153915351339177128287251625572730669656049616745326604203092341062788953841047922909842516350639775136480486485528622167462175231523760248428422825464155796850647432631332935954216978754418213693121781031/32401695422472823244062274415589891844901947683581322202933281331028433225811327665336353019198127221821200690034820734650615097524382812650151180310289779040127874974476740309501780866334672426709180150927888500000000000000")
    # assert exact_eval
    #     == Fraction("-151265032425087284982588266841514445780881466895409534631901021080335860890470200721350319549606774819765539572611713804444716481197996060701770214040204679415782074632434324129620425342140941200104317518906611060247730516791694529710343816824711756991650843797107109260441312744310001715999223442364792145733465945622244947916948311320996824772417574095233458835725654338337722732821640878437756310814202456569124742402244543609617713139480373179560169888858437847923329595821738733334589502585732591771265840211885775082613332811426524693916060922906548286539271098620983170822926050583423159657283162956518169348183208364173203375540348651614723705925173029286675912008838831838284229127949854082991528046493571228582373461260832744781/40509696335839477179206299442573574864425075548968769269881685214554173939402322852710640290554111313607659226944102229926121616967002100392604302677829207706616910925587124457593132266308795945394067392144733100460500036492175668284796629164296869799232315746173284865618374166685587916894146352313830980020092483580181740959981552728410235795451147749028020417026429979651430464498407735768140664707085105778709888672568489341825030982100860473256041530552103363551174816141387326546969642397585420638021113799929750301151763326276404553210331463139928789648784858669589923189283279449071234382691873967227148800087495267071658010242421175132370885883695475659349823121931515978267686667910595866162421875000000000000000000000000000")
    for line in sys.stdin:
        exact_eval(line)
